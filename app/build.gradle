apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'com.gradleup.static-analysis'
apply from: configFile('configure-crashlytics.gradle')
apply from: configFile('play-publish.gradle')

buildProperties {
    signing.using(file('props/release.signing')) | file('props/debug.signing')
    secrets.using(file('props/secrets.properties')) | System.getenv()
}

def secrets = buildProperties.secrets

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId 'com.tasomaniac.muzei.comiccovers'
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        buildConfigString "COMIC_VINE_CONSUMER_KEY", secrets['comicvine_consumer_key'] | ""
        buildConfigString "COMIC_VINE_AUTHORITY", applicationId
        manifestPlaceholders = [comicVineAuthority: applicationId]

        resConfigs "en"
    }

    signingConfigs {
        debug.storeFile file('props/debug.keystore')
        release {
            def signing = buildProperties.signing
            storeFile file("props/${signing['storeFile'].string}")
            storePassword signing['storePassword'].string
            keyAlias signing['keyAlias'].string
            keyPassword signing['keyPassword'].string
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

staticAnalysis {
    penalty {
        maxWarnings = 10
        maxErrors = 0
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        checkAllWarnings true
        checkReleaseBuilds false

        lintConfig configFile('lint.xml')

        includeVariants { it.name == 'debug' }
    }
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'androidx.work:work-runtime:2.4.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'com.google.android.apps.muzei:muzei-api:3.4.0'

    testImplementation 'junit:junit:4.13.1'
}
